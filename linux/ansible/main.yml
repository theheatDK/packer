---
- hosts: all
  become: yes
  gather_facts: yes

  vars:
    ip_end: 24
    ip_start: 16
    network: 10.0.2
    routing_prefix: 24

    basic_packages:
      - git
      - subversion
      - yum-cron
      - yum-plugin-fastestmirror

  tasks:
    - name: OS info
      debug:
        msg:  |
              ansible_os_family            = {{ ansible_os_family  }}
              ansible_distribution         = {{ ansible_distribution }}
              ansible_distribution_version = {{ ansible_distribution_version }}
              ansible_distribution_release = {{ ansible_distribution_release }}
      when: ansible_os_family is defined

    ###############################################################################
    # Enable OEL repos
    ###############################################################################
    - name: Enable OEL repos
      block:
        - name: Enable OEL 7 optional repo
          ini_file:
            dest: /etc/yum.repos.d/public-yum-ol7.repo
            section: ol7_optional_latest
            option: enabled
            value: 1

        - name: Enable OEL 7 addon repo
          ini_file:
            dest: /etc/yum.repos.d/public-yum-ol7.repo
            section: ol7_addons
            option: enabled
            value: 1
      when: ansible_distribution == 'OracleLinux'
      tags:
        - oel-repos

    ###############################################################################
    # Install docker
    ###############################################################################
    - name: Install docker
      block:
        - name: Add Docker GPG key.
          rpm_key:
            key: https://download.docker.com/linux/centos/gpg
            state: present

        - name: Add Docker repository
          get_url:
            url: "https://download.docker.com/linux/centos/docker-ce.repo"
            dest: '/etc/yum.repos.d/docker-ce.repo'
            owner: root
            group: root
            mode: 0644

        - name: Install docker
          yum:
            name: docker
            state: present
      tags:
        - docker

    ###############################################################################
    # Install httpd
    ###############################################################################
    - name: Install httpd
      block:
        - name: Install httpd and mod_ssl
          yum:
            name: "httpd,mod_ssl"
            state: present

        - name: httpd should start a boot
          systemd:
            name: httpd
            enabled: yes
            state: restarted
      tags:
        - httpd

    ###############################################################################
    # Install powershell
    ###############################################################################
    - name: Install Powershell
      block:
        - name: Add Microsoft RedHat repository
          get_url:
            url: "https://packages.microsoft.com/config/rhel/7/prod.repo"
            dest: '/etc/yum.repos.d/microsoft.repo'
            owner: root
            group: root
            mode: 0644

        - name: Install Powershell
          yum:
            name: powershell
            state: present
      tags:
        - powershell

    ###############################################################################
    # Install JBoss EAP
    ###############################################################################
    - name: Install JBoss EAP
      block:
        - name: Unpack Java
          unarchive:
            src: "../software/{{ java_file }}"
            dest: /data/java
            owner: cc360
            group: cc360

      tags:
        - jboss-eap

    ###############################################################################
    # Create users with public key
    ###############################################################################
    - name: Create users with public key
      block:
        - name: Create users
          user:
            name: "{{ item }}"
          with_items: "{{ users }}"

        - name: Authorize users with ssh key
          authorized_key:
            user: "{{ item }}"
            key: "{{ lookup('file', '/usr/tmp/ssh_pub_keys/{{ item }}_id_rsa.pub') }}"
          with_items: "{{ users }}"

        - name: Delete ssh key directory
          file:
            state: absent
            path: "/usr/tmp/ssh_pub_keys/"

        - name: Create users string
          set_fact:
            user_string: '{{users|join(",")}}'

        - name: Set up sudo for users
          lineinfile:
            dest: /etc/sudoers
            state: present
            regexp: '{{item.re}}'
            line: '{{item.line}}'
            validate: '/usr/sbin/visudo -cf %s'
            backup: yes
          with_items:
            - {re: "^ *User_Alias +SUDOROOT *=", line: "User_Alias SUDOROOT={{user_string}}"}
            - {re: "^ *SUDOROOT ", line: "SUDOROOT ALL=(ALL) NOPASSWD:ALL"}
          tags:
            - users-with-pk

    ###############################################################################
    # Harden
    ###############################################################################
    - name: Set default umask to 027
      replace:
        dest=/etc/profile
        regexp="umask 0.."
        replace="umask 027"
        backup=yes
      tags:
        - harden

    ###############################################################################
    # Harden root
    ###############################################################################
    - name: Delete password from root
      command: "passwd -d root"
      tags:
        - harden-root

    ###############################################################################
    # Harden ssh
    ###############################################################################
    - name: Harden ssh
      block:
        - name: sshd - Disallow password authentication
          lineinfile:
            dest: /etc/ssh/sshd_config
            regexp: "^PasswordAuthentication"
            line: "PasswordAuthentication no"
            state: present
          notify: Restart sshd

        - name: sshd - Disallow root SSH login
          lineinfile:
            dest: /etc/ssh/sshd_config
            regexp: "^PermitRootLogin"
            line: "PermitRootLogin no"
            state: present
          notify: Restart sshd
      tags:
        - harden-ssh

    ###############################################################################
    # Add extra IPs
    ###############################################################################
    - name: Add extra IPs
      command: nmcli con mod enp0s3 +ipv4.addresses {{ network }}.{{ item }}/{{ routing_prefix }}
      with_sequence: start={{ ip_start }} end={{ ip_end }} stride=1
      tags:
        - add-ips

    ###############################################################################
    # yum update
    ###############################################################################
    - name: Upgrade all packages
      yum: name=* state=latest
      tags:
        - yum-update

    ###############################################################################
    # Basic tasks
    ###############################################################################
    - name: Basic tasks
      block:
        - name: Install the listed basic packages
          yum:
            name: "{{ basic_packages }}"
            state: present

        - name: yum-cron start a boot
          systemd:
            name: yum-cron
            enabled: yes
            state: restarted

        - name: sshd - Set UseDNS no
          lineinfile:
            dest: /etc/ssh/sshd_config
            regexp: "^UseDNS"
            line: "UseDNS no"
            insertafter: EOF
            state: present
          notify: Restart sshd

        - name: Prevent blocking because of missing entropy
          replace:
            dest: "/usr/lib/systemd/system/rngd.service"
            regexp: "ExecStart=.*"
            replace: "ExecStart=/sbin/rngd -f -r /dev/urandom"

        - name: Force systemd to reread configs
          command: systemctl daemon-reload

  handlers:
    - name: Restart sshd
      systemd:
        name: sshd
        state: restarted

    - name: Restart network
      systemd:
        name: network
        state: restarted
